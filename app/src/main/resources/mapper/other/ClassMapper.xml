<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.app.mapper.other.ClassMapper">
    <select id="selectClass" resultType="model.dto.other.ClassResponse">
        SELECT
            A.id,
            course.name,
            A.start_datetime AS startDatetime,
            A.end_datetime AS endDatetime,
            A.hours,
            A.course_id AS courseId,
            A.course_checked AS courseChecked,
            course.limit,
            D.user_name_en AS updateUserName,
            A.update_time AS updateTime,
            course.course_type AS courseType
        FROM tsva_class AS A
        INNER JOIN tsva_course AS course
            ON A.course_id = course.id
        LEFT JOIN sys_user AS D
            ON A.update_user = D.id
        WHERE
            1 = 1
        <if test="name != null and name != ''">
            and course.name like concat('%',#{name},'%')
        </if>
        <if test="coach != null">
            AND EXISTS ( SELECT 1 FROM tsva_class_coach AS coach
            WHERE A.id = coach.class_id
            AND coach.coach_id = #{coach})
        </if>
        <if test="student != null">
            AND EXISTS ( SELECT 1 FROM tsva_class_student AS student
            WHERE A.id = student.class_id
            AND student.student_id = #{student})
        </if>
        <if test="notConfirm != null">
            and A.course_checked = #{notConfirm}
        </if>
        <if test="startDate != null">
            AND (#{startDate} &lt; A.start_datetime OR #{startDate} &lt; A.end_datetime)
        </if>
        <if test="endDate != null">
            AND (#{endDate} &gt; A.start_datetime OR #{endDate} &gt; A.end_datetime)
        </if>
<!--        ORDER BY A.start_datetime-->
    </select>

    <select id="selectClassCoach" resultType="model.dto.other.ClassCoachResponse">
        SELECT
            A.coach_id AS id,
            D.user_name_en AS name
        FROM tsva_class_coach AS A
        LEFT JOIN sys_user AS D
            ON A.coach_id = D.id
        WHERE 1 = 1
        AND  A.class_id = #{classId}
        ORDER BY A.class_id
    </select>

    <select id="selectClassStudent" resultType="model.dto.other.ClassStudentResponse">
        SELECT
            A.student_id AS id,
            D.user_name_en AS name,
            D.user_name_ch AS nameCh
        FROM tsva_class_student AS A
        LEFT JOIN sys_user_child AS D
            ON A.student_id = D.id
        WHERE 1 = 1
        AND  A.class_id = #{classId}
        ORDER BY A.student_id
    </select>

    <select id="getClassFee" resultType="model.dto.other.ClassFeeResponse">
        SELECT
            D.user_name_en  AS name,
            'Student' AS feeType,
            C.hours AS hours,
            A.tuition_total AS totalAmount,
            D.user_name_ch AS nameCh,
            A.student_id AS studentId,
            0 AS coachId,
            0 AS coachFee,
            A.tuition_fee AS tuitionFee
        FROM tsva_class_student AS A
        INNER JOIN tsva_class C
            ON C.id = A.class_id
        LEFT JOIN sys_user_child AS D
            ON A.student_id = D.id
        WHERE 1 = 1
        AND  A.class_id = #{classId}
        UNION ALL
        SELECT
            D.user_name_en  AS name,
            'Coach' AS feeType,
            C.hours AS hours,
            A.coach_total AS totalAmount,
            D.user_name_ch AS nameCh,
            0 AS studentId,
            A.coach_id AS coachId,
            A.coach_fee AS coachFee,
            0 AS tuitionFee
        FROM tsva_class_coach AS A
        INNER JOIN tsva_class C
            ON C.id = A.class_id
        LEFT JOIN sys_user AS D
            ON A.coach_id = D.id
        WHERE 1 = 1
        AND  A.class_id = #{classId}
        ORDER BY feeType,name
    </select>

    <select id="listClassStudent" resultType="model.dto.other.ClassStudentResponse">
        SELECT DISTINCT
            A.student_id AS id,
            D.user_name_en AS name
        FROM tsva_class_student AS A
        INNER JOIN tsva_class AS class
            ON A.class_id = class.id
        LEFT JOIN sys_user_child AS D
            ON A.student_id = D.id
        WHERE 1 = 1
        <if test="_parameter != null and _parameter != ''">
            AND (D.user_name_en like concat('%',#{name},'%') OR D.user_name_ch like concat('%',#{name},'%'))
        </if>
        ORDER BY D.user_name_en
    </select>

    <insert id="insertClassCoachByList" parameterType="list" >
        INSERT INTO
        tsva_class_coach(class_id, coach_id, coach_type, coach_fee, coach_total) values
        <foreach collection="list" item="item"  separator=",">
            (#{item.classId},#{item.coachId},#{item.coachType},#{item.coachFee},#{item.coachTotal})
        </foreach>
    </insert>

    <insert id="insertClassStudentByList" parameterType="list" >
        INSERT INTO
        tsva_class_student(class_id, student_id, tuition_fee, tuition_total) values
        <foreach collection="list" item="item"  separator=",">
            (#{item.classId}, #{item.studentId}, #{item.tuitionFee}, #{item.tuitionTotal})
        </foreach>
    </insert>

    <delete id="deleteClassCoach">
        DELETE FROM tsva_class_coach
        WHERE class_id = #{id}
    </delete>

    <delete id="deleteClassStudent">
        DELETE FROM tsva_class_student
        WHERE class_id = #{id}
    </delete>

    <update id="updateClassById" parameterType="model.dto.other.ClassRequest" >
        UPDATE tsva_class SET
        `start_datetime` = #{startDatetime},
        `end_datetime` = #{endDatetime},
        `hours` = #{hours},
        `course_id` =  #{courseId},
        `update_user` = #{updateUser}
        WHERE id = #{id}
    </update>
<!--    <insert id="insertCourseFee" parameterType="list" >-->
<!--        insert into tsva_course_fee-->
<!--        (`course_id`, `coach_id`, `coach_type`, `coach_fee`, `tuition_fee`)-->
<!--        values-->
<!--        <foreach collection="list" item="item"  separator=",">-->
<!--            (#{item.courseId}, #{item.coachId}, #{item.coachType}, #{item.coachFee}, #{item.tuitionFee})-->
<!--        </foreach>-->
<!--    </insert>-->

<!--    <delete id="deleteCourseFee">-->
<!--        DELETE FROM tsva_course_fee-->
<!--        WHERE course_id = #{id}-->
<!--    </delete>-->
</mapper>