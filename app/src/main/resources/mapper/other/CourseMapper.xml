<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.app.mapper.other.CourseMapper">
    <select id="selectCourse" resultType="model.dto.other.CourseEntity">
        SELECT
            A.id,
            A.name,
            A.course_type AS courseType,
            A.status,
            A.limit,
            A.apply,
            A.update_user AS updateUser,
            D.user_name_en AS updateUserName,
            A.update_time AS updateTime
        FROM tsva_course AS A
        LEFT JOIN sys_user AS D
        ON A.update_user = D.id
        WHERE
        1 = 1
        <if test="name != null and name != ''">
            and A.name = #{name}
        </if>
        <if test="status != null and status != ''">
            and A.status = #{status}
        </if>
        <if test="id != null">
            and A.id = #{id}
        </if>
        ORDER BY A.name
    </select>

    <select id="selectCourseFee" resultType="model.dto.other.CourseFeeEntity">
        SELECT
            A.id,
            A.coach_id AS coachId,
            A.coach_type AS coachType,
            A.coach_fee  AS coachFee,
            A.tuition_fee  AS tuitionFee,
            D.user_name_en AS coachName
        FROM tsva_course_fee AS A
        LEFT JOIN sys_user AS D
        ON A.coach_id = D.id
        WHERE 1 = 1
          AND  course_id = #{id}
        ORDER BY A.id
    </select>

    <insert id="insertCourse" useGeneratedKeys="true" keyProperty="id" parameterType="model.dto.other.CourseEntity" >
        insert into tsva_course
        (`name`, `course_type`, `status`, `limit`, `apply`, `update_user`, `update_time`)
        values
        (#{name}, #{courseType}, #{status}, #{limit}, #{apply}, #{updateUser}, #{updateTime})
    </insert>

    <update id="updateCourse" parameterType="model.dto.other.CourseEntity" >
        UPDATE tsva_course SET
            `name` = #{name},
            `course_type` = #{courseType},
            `status` = #{status},
            `limit` =  #{limit},
            `apply` = #{apply},
            `update_user` = #{updateUser},
            `update_time` = #{updateTime}
        WHERE id = #{id}
    </update>

    <insert id="insertCourseFee" parameterType="list" >
        insert into tsva_course_fee
        (`course_id`, `coach_id`, `coach_type`, `coach_fee`, `tuition_fee`)
        values
        <foreach collection="list" item="item"  separator=",">
            (#{item.courseId}, #{item.coachId}, #{item.coachType}, #{item.coachFee}, #{item.tuitionFee})
        </foreach>
    </insert>

    <delete id="deleteCourseFee">
        DELETE FROM tsva_course_fee
        WHERE course_id = #{id}
    </delete>
</mapper>